{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js"],"names":["Tags","render","title","this","props","pageContext","tag","_this$props$data$allM","data","allMarkdownRemark","edges","totalCount","tagHeader","console","log","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","map","_ref","node","slug","fields","frontmatter","key","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_sutro__WEBPACK_IMPORTED_MODULE_1__","typography_theme_sutro__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","sutroTheme","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginBottom","marginTop","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href"],"mappings":"mLAMMA,kLACFC,OAAA,WACI,IACMC,EADMC,KAAKC,MAAMC,YACLC,IAFbC,EAGyBJ,KAAKC,MAAMI,KAAKC,kBAAtCC,EAHHH,EAGGG,MAAOC,EAHVJ,EAGUI,WACTC,EAAeD,EAAN,SAAuC,IAAfA,EAAmB,GAAK,KAAhD,iBAAoET,EAApE,IAGf,OAFAW,QAAQC,IAAIF,GAGRG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUhB,KAAKC,MAAMe,SAAUjB,MAAM,QACzCa,EAAAC,EAAAC,cAAA,UAAKL,GACLG,EAAAC,EAAAC,cAAA,UACKP,EAAMU,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACFC,EAASD,EAAKE,OAAdD,KACArB,EAAUoB,EAAKG,YAAfvB,MACR,OACIa,EAAAC,EAAAC,cAAA,MAAIS,IAAKH,GACLR,EAAAC,EAAAC,cAACU,EAAA,EAAD,CAAMC,GAAIL,GAAOrB,YAjB9B2B,IAAMC,WAkDV9B,YAER,IAAM+B,EAAS,kCC1DtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,KAAAS,EAAAT,EAAAO,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAOnBF,IACFP,EAASO,EAAWP,OACpBC,EAAQM,EAAWN,wCCZhC,IAAAS,EAAAb,EAAA,GAAAtB,EAAAsB,EAAAO,EAAAM,GAAAC,EAAAd,EAAA,IAAAe,EAAAf,EAAAO,EAAAO,GAAAd,EAAAC,EAAAC,EAAA,sBAAAa,EAAApC,IAAAqB,EAAA,KAAAA,EAAA,GAcyBgB,QAAOC,QAELzB,IAAM0B,cAAc,+ECMhCC,UAjBU,SAAAnC,GAAiC,IAA9BF,EAA8BE,EAA9BF,SAAUsC,EAAoBpC,EAApBoC,cACpC,OAAKA,EAGE5B,IAAMZ,cAAcyC,IAApBC,OAAAC,OAAA,CACLzC,WACAsC,iBACGA,EAAcI,OALV,wFCFLC,kLACJ7D,OAAA,WAAS,IAGH8D,EAHGC,EAC+B7D,KAAKC,MAAnCe,EADD6C,EACC7C,SAAUjB,EADX8D,EACW9D,MAAO+D,EADlBD,EACkBC,SA8CzB,OAzCEF,EAJY,MAGV5C,EAAS+C,SAETC,EAAAnD,EAAAC,cAAA,MACEmD,MAAKT,OAAAC,OAAA,GACAnB,YAAM,KADN,CAEH4B,aAAc7B,YAAO,KACrB8B,UAAW,KAGbH,EAAAnD,EAAAC,cAACsD,EAAA,EAAD,CACEH,MAAO,CACLI,UAAS,OACTC,eAAc,OACdC,MAAK,WAEP9C,GAAE,KAED1B,IAMLiE,EAAAnD,EAAAC,cAAA,MACEmD,MAAO,CACLO,WAAU,yBACVL,UAAW,IAGbH,EAAAnD,EAAAC,cAACsD,EAAA,EAAD,CACEH,MAAO,CACLI,UAAS,OACTC,eAAc,OACdC,MAAK,WAEP9C,GAAE,KAED1B,IAMPiE,EAAAnD,EAAAC,cAAA,OACEmD,MAAO,CACLQ,WAAU,OACVC,YAAW,OACXC,SAAUtC,YAAO,IACjBuC,QAAYvC,YAAO,KAAZ,IAAoBA,YAAO,OAGpC2B,EAAAnD,EAAAC,cAAA,cAAS8C,GACTI,EAAAnD,EAAAC,cAAA,YAAOgD,GACPE,EAAAnD,EAAAC,cAAA,oBACK,IAAI+D,MAAOC,cADhB,mBAGEd,EAAAnD,EAAAC,cAAA,KAAGiE,KAAK,4BAAR,gBA9DWrD,IAAMC,WAqEZgC","file":"component---src-templates-tags-js-96b7905c65b64403d7d1.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/layout\"\n\nclass Tags extends React.Component {\n    render() {\n        const tag = this.props.pageContext\n        const title = tag.tag\n        const { edges, totalCount } = this.props.data.allMarkdownRemark\n        const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${title}\"`\n        console.log(tagHeader)\n\n        return (\n            <Layout location={this.props.location} title=\"Tags\">\n                <h1>{tagHeader}</h1>\n                <ul>\n                    {edges.map(({ node }) => {\n                        const { slug } = node.fields\n                        const { title } = node.frontmatter\n                        return (\n                            <li key={slug}>\n                                <Link to={slug}>{title}</Link>\n                            </li>\n                        )\n                    })}\n                </ul>\n            </Layout>\n        )\n    }\n}\n\nTags.propTypes = {\n    pageContext: PropTypes.shape({\n        tag: PropTypes.string.isRequired,\n    }),\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            totalCount: PropTypes.number.isRequired,\n            edges: PropTypes.arrayOf(\n                PropTypes.shape({\n                    node: PropTypes.shape({\n                        frontmatter: PropTypes.shape({\n                            title: PropTypes.string.isRequired,\n                        }),\n                        fields: PropTypes.shape({\n                            slug: PropTypes.string.isRequired,\n                        }),\n                    }),\n                }).isRequired\n            ),\n        }),\n    }),\n}\n\nexport default Tags\n\nexport const pageQuery = graphql`\n    query($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\nimport sutroTheme from \"typography-theme-sutro\"\n\nconst typography = new Typography(sutroTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n"],"sourceRoot":""}