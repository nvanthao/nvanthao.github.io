{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["TagsPage","render","group","this","props","data","allMarkdownRemark","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","_components_seo__WEBPACK_IMPORTED_MODULE_5__","_components_bio__WEBPACK_IMPORTED_MODULE_3__","map","tag","key","fieldValue","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","kebabCase","totalCount","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_sutro__WEBPACK_IMPORTED_MODULE_1__","typography_theme_sutro__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","sutroTheme","react__WEBPACK_IMPORTED_MODULE_0__","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","Object","assign","json","Layout","header","_this$props","children","pathname","react__WEBPACK_IMPORTED_MODULE_1___default","style","marginBottom","marginTop","boxShadow","textDecoration","color","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","Bio","_public_static_d_734113607_json__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2___default","display","gatsby_image__WEBPACK_IMPORTED_MODULE_3___default","fixed","avatar","childImageSharp","alt","minWidth","borderRadius","imgStyle"],"mappings":"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","file":"component---src-pages-tags-js-9d11bb21301640d3e09a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport kebabCase from \"lodash/kebabCase\"\n\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass TagsPage extends React.Component {\n    render() {\n        const { data } = this.props\n        const group = data.allMarkdownRemark.group\n        return (\n            <Layout location={this.props.location} title=\"Tags\">\n                <SEO title=\"All tags\" />\n                <Bio />\n                <div>\n                    <ul>\n                        {group.map(tag => (\n                            <li key={tag.fieldValue}>\n                                <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>\n                                    {tag.fieldValue} ({tag.totalCount})\n                                </Link>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </Layout>\n        )\n    }\n}\n\nTagsPage.propTypes = {\n    data: PropTypes.shape({\n        allMarkdownRemark: PropTypes.shape({\n            group: PropTypes.arrayOf(\n                PropTypes.shape({\n                    fieldValue: PropTypes.string.isRequired,\n                    totalCount: PropTypes.number.isRequired,\n                }).isRequired\n            ),\n        }),\n        site: PropTypes.shape({\n            siteMetadata: PropTypes.shape({\n                title: PropTypes.string.isRequired,\n            }),\n        }),\n    }),\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n    query {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        allMarkdownRemark(limit: 2000) {\n            group(field: frontmatter___tags) {\n                fieldValue\n                totalCount\n            }\n        }\n    }\n`","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from \"typography\"\nimport sutroTheme from \"typography-theme-sutro\"\n\nconst typography = new Typography(sutroTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm, scale } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { location, title, children } = this.props\n    const rootPath = `${__PATH_PREFIX__}/`\n    let header\n\n    if (location.pathname === rootPath) {\n      header = (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h1>\n      )\n    } else {\n      header = (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Link\n            style={{\n              boxShadow: `none`,\n              textDecoration: `none`,\n              color: `inherit`,\n            }}\n            to={`/`}\n          >\n            {title}\n          </Link>\n        </h3>\n      )\n    }\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        <header>{header}</header>\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n        </footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/profile-pic.png/\" }) {\n        childImageSharp {\n          fixed(width: 50, height: 50) {\n            ...GatsbyImageSharpFixed\n          }\n        }\n      }\n      site {\n        siteMetadata {\n          author\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        marginBottom: rhythm(2.5),\n      }}\n    >\n      <Image\n        fixed={data.avatar.childImageSharp.fixed}\n        alt={author}\n        style={{\n          marginRight: rhythm(1 / 2),\n          marginBottom: 0,\n          minWidth: 50,\n          borderRadius: `100%`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n      <p>\n        Document <strong>{author}</strong>'s learning journeys!\n      </p>\n    </div>\n  )\n}\n\nexport default Bio\n"],"sourceRoot":""}